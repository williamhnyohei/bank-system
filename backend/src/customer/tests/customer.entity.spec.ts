import { Customer } from '../customer.entity';
import { User } from '../../users/user.entity';
import { Account } from '../../accounts/account.entity';
import { CreateCustomerDto } from '../../customer/DTOs/create-customer.dto';
import { validate } from 'class-validator';

describe('Customer Entity', () => {
  it('deve criar um cliente v치lido com DTO', async () => {
    const createCustomerDto = new CreateCustomerDto();
    createCustomerDto.fullName = 'Jo칚o Silva';
    createCustomerDto.cpf = '52998224725'; // CPF v치lido
    createCustomerDto.address = 'Rua Exemplo, 123';
    createCustomerDto.phoneNumber = '(11) 99999-9999';
  
    // Validando o DTO antes de criar a entidade
    const errors = await validate(createCustomerDto);
    console.log(errors); // 游녤 Adiciona essa linha para ver os erros de valida칞칚o
    expect(errors.length).toBe(0); // N칚o deve haver erros
  });
  

  it('deve falhar ao validar um DTO inv치lido', async () => {
    const createCustomerDto = new CreateCustomerDto();
    createCustomerDto.fullName = ''; // Inv치lido (vazio)
    createCustomerDto.cpf = '123'; // CPF inv치lido
    createCustomerDto.address = '';
    createCustomerDto.phoneNumber = '';

    const errors = await validate(createCustomerDto);
    expect(errors.length).toBeGreaterThan(0); // Deve haver erros de valida칞칚o
  });
});
